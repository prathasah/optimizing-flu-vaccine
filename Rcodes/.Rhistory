xaxis=list(title="Vaccine efficacy"),
zaxis=list(title="Infections (millions)")))
df <-acast(dt1, relative_coverage~vaccine_efficacy, value.var="infection_per_million")
vaccine_efficacy <- seq(0.001, 0.601, by=0.01)
relative_coverage <- seq(0,0.99, by=0.01)
plot_ly(type = 'surface' , z = matrix(df),
y=vaccine_efficacy,x=relative_coverage)%>%
layout(
scene = list(
xaxis=list(title="Vaccination coverage"),
yaxis=list(title="Vaccine efficacy"),
zaxis=list(title="Infections (millions)")))
df <-acast(dt1, relative_coverage~vaccine_efficacy, value.var="infection_per_million")
dim(a)
dim(df)
vaccine_efficacy <- seq(0.001, 0.601, by=0.01)
relative_coverage <- seq(0,0.99, by=0.01)
length(vaccine_coverage)
vaccine_efficacy <- seq(0.001, 0.601, by=0.01)
relative_coverage <- seq(0,0.99, by=0.01)
length(relative_coverage)
plot_ly(type = 'surface' , z = matrix(df), x=relative_coverage,
y=vaccine_efficacy,)%>%
layout(
scene = list(
xaxis=list(title="Vaccination coverage"),
yaxis=list(title="Vaccine efficacy"),
zaxis=list(title="Infections (millions)")))
plot_ly(type = 'surface' , z = matrix(df),
x=vaccine_efficacy,y=relative_coverage)%>%
layout(
scene = list(
yaxis=list(title="Vaccination coverage"),
xaxis=list(title="Vaccine efficacy"),
zaxis=list(title="Infections (millions")))
library(reshape2)
df <-acast(dt1, vaccine_efficacy~ relative_coverage, value.var="infection_per_million")
vaccine_efficacy <- seq(0.001, 0.601, by=0.01)
relative_coverage <- seq(0,0.99, by=0.01)
plot_ly(type = 'surface' , z = matrix(df),
x=vaccine_efficacy,y=relative_coverage)%>%
layout(
scene = list(
yaxis=list(title="Vaccination coverage"),
xaxis=list(title="Vaccine efficacy"),
zaxis=list(title="Infections (millions")))
library(ggplot2)
library(gridExtra)
library(grid)
library(plyr)
library(lattice)
library(reshape)
library(RColorBrewer)   # for brewer.pal(...)
library(cowplot)
library(Hmisc)
library(plotly)
################################################################
dt1 <- read.csv("../data/Incidence_8Dec2017.csv", header=T)
dt1$infection_per_million <- dt1$total_infections/1000000
dt1 <- dt1[,c("relative_coverage", "vaccine_efficacy", "infection_per_million")]
dt2 <- read.csv("../data/Hospitalizations_8Dec2017.csv", header=T)
str(dt2)
dh <- read.csv("../data/historical_seasons_data.csv", header=T)
dh$infection_per_million <- dh$infections
str(dh)
dh<- na.omit(dh)
#####################################################################
## some pretty colors
library(RColorBrewer)
k <- 11
my.cols <- rev(brewer.pal(k, "RdYlBu"))
#jet.colors <- colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan", "#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(10,50, 100,  150))
p1
library(reshape2)
df <-acast(dt1, vaccine_efficacy~ relative_coverage, value.var="infection_per_million")
vaccine_efficacy <- seq(0.001, 0.601, by=0.01)
relative_coverage <- seq(0,0.99, by=0.01)
plot_ly(type = 'surface' , z = matrix(df),
x=vaccine_efficacy,y=relative_coverage)%>%
layout(
scene = list(
yaxis=list(title="Vaccination coverage"),
xaxis=list(title="Vaccine efficacy"),
zaxis=list(title="Infections (millions")))
df <-acast(dt1, vaccine_efficacy~ relative_coverage, value.var="infection_per_million")
vaccine_efficacy <- seq(0.001, 0.601, by=0.01)
relative_coverage <- seq(0,0.99, by=0.01)
plot_ly(type = 'surface' , z = matrix(df),
x=vaccine_efficacy,y=relative_coverage)%>%
layout(
scene = list(
yaxis=list(title="Vaccination coverage"),
xaxis=list(title="Vaccine efficacy"),
zaxis=list(title="Infections (millions")))
plot_ly(type = 'surface' , z = ~matrix(df),
x=~vaccine_efficacy,y=~relative_coverage)%>%
layout(
scene = list(
yaxis=list(title="Vaccination coverage"),
xaxis=list(title="Vaccine efficacy"),
zaxis=list(title="Infections (millions")))
plot_ly(type = 'surface' , z = matrix(df),
x=vaccine_efficacy,y=relative_coverage)%>%
layout(
scene = list(
yaxis=list(title="Vaccination coverage"),
xaxis=list(title="Vaccine efficacy")))
library(ggplot2)
library(gridExtra)
library(grid)
library(plyr)
library(lattice)
library(reshape)
library(RColorBrewer)   # for brewer.pal(...)
library(cowplot)
library(Hmisc)
library(plotly)
################################################################
dt1 <- read.csv("../data/Incidence_8Dec2017.csv", header=T)
dt1$infection_per_million <- dt1$total_infections/1000000
dt1 <- dt1[,c("relative_coverage", "vaccine_efficacy", "infection_per_million")]
dt2 <- read.csv("../data/Hospitalizations_8Dec2017.csv", header=T)
str(dt2)
dh <- read.csv("../data/historical_seasons_data.csv", header=T)
dh$infection_per_million <- dh$infections
str(dh)
dh<- na.omit(dh)
#####################################################################
## some pretty colors
library(RColorBrewer)
k <- 11
my.cols <- rev(brewer.pal(k, "RdYlBu"))
#jet.colors <- colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan", "#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(10,50, 100,  150))
p1
ggsave("infections_2017.eps", p1, height = 5, width =8)
#p1 <- p1 +  geom_point(data=dh, aes(x=vaccine_efficacy, y=relative_coverage, fill=(infection_per_million)), pch=21)
library(reshape2)
df <-acast(dt1, vaccine_efficacy~ relative_coverage, value.var="infection_per_million")
vaccine_efficacy <- seq(0.001, 0.601, by=0.01)
relative_coverage <- seq(0,0.99, by=0.01)
plot_ly(type = 'surface' , z = matrix(df),
x=vaccine_efficacy,y=relative_coverage)%>%
layout(
scene = list(
yaxis=list(title="Vaccination coverage"),
xaxis=list(title="Vaccine efficacy")))
df
plot_ly(type = 'surface' , z = matrix(df),
x=vaccine_efficacy,y=relative_coverage)
library(lattice)
p1 <- wireframe(infection_per_million ~ vaccine_efficacy*relative_coverage, data = dt1,
xlab = "X Coordinate (feet)", ylab = "Y Coordinate (feet)",
main = "Surface elevation data",
drape = TRUE,
colorkey = TRUE,
screen = list(z = -60, x = -60)
)
p1
p1 <- wireframe(infection_per_million ~ relative_coverage*vaccine_efficacy*, data = dt1,
xlab = "Vaccination coverage", ylab = "Vaccine efficacy",
drape = TRUE,
colorkey = TRUE,
screen = list(z = -60, x = -60)
)
p1
p1 <- wireframe(infection_per_million ~ relative_coverage*vaccine_efficacy*, data = dt1,
xlab = "Vaccination coverage", ylab = "Vaccine efficacy",
drape = TRUE,
colorkey = TRUE,
screen = list(z = -60, x = -60))
p1 <- wireframe(infection_per_million ~ relative_coverage*vaccine_efficacy, data = dt1,
xlab = "Vaccination coverage", ylab = "Vaccine efficacy",
drape = TRUE,
colorkey = TRUE,
screen = list(z = -60, x = -60))
p1
library(reshape2)
df <-acast(dt1, vaccine_efficacy~ relative_coverage, value.var="infection_per_million")
vaccine_efficacy <- seq(0.001, 0.601, by=0.01)
relative_coverage <- seq(0,0.99, by=0.01)
plot_ly(type = 'surface' , z = matrix(df),
x=vaccine_efficacy,y=relative_coverage)
plot_ly(z = matrix(df), x=vaccine_efficacy,y=relative_coverage)%>% add_surface()
packageVersion('plotly')
vaccine_efficacy
vaccine_efficacy <- c(seq(0.001, 0.601, by=0.01))
vaccine_efficacy
plot_ly(type = 'surface' , z = matrix(df),
x=vaccine_efficacy,y=relative_coverage)
library(plot3D)
install.packages("plot3D")
persp3D(x=dt1$vaccine_efficacy, y=dt1$relative_coverage, z=infection_per_million, scale=FALSE)
library(plot3D)
persp3D(x=dt1$vaccine_efficacy, y=dt1$relative_coverage, z=infection_per_million, scale=FALSE)
persp3D(x=dt1$vaccine_efficacy, y=dt1$relative_coverage, z=dt1$infection_per_million, scale=FALSE)
library(reshape2)
df <-acast(dt1, vaccine_efficacy~ relative_coverage, value.var="infection_per_million")
vaccine_efficacy <- seq(0.001, 0.601, by=0.01)
relative_coverage <- seq(0,0.99, by=0.01)
persp3D(x=vaccine_efficacy, y=relative_coverage, z=infection_per_million, scale=FALSE)
persp3D(x=vaccine_efficacy, y=relative_coverage, z=df, scale=FALSE)
persp3D(x=vaccine_efficacy, y=relative_coverage, z=df)
persp3D(x=vaccine_efficacy, y=relative_coverage, z=df,
xlab = "Vaccine efficacy", ylab="Vaccination coverage")
persp3D(x=vaccine_efficacy, y=relative_coverage, z=df,
xlab = "Vaccine efficacy", ylab="Vaccination coverage", zlab="Infections")
library(ggplot2)
library(gridExtra)
library(grid)
library(plyr)
library(lattice)
library(reshape)
library(RColorBrewer)   # for brewer.pal(...)
library(cowplot)
library(Hmisc)
library(plot3D)
library(plotly)
library(plot3D)
dt1 <- read.csv("../data/Incidence_8Dec2017.csv", header=T)
dt1$infection_per_million <- dt1$total_infections/1000000
dt1 <- dt1[,c("relative_coverage", "vaccine_efficacy", "infection_per_million")]
dt2 <- read.csv("../data/Hospitalizations_8Dec2017.csv", header=T)
str(dt2)
dh <- read.csv("../data/historical_seasons_data.csv", header=T)
dh$infection_per_million <- dh$infections
str(dh)
dh<- na.omit(dh)
library(RColorBrewer)
k <- 11
my.cols <- rev(brewer.pal(k, "RdYlBu"))
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(10,50, 100,  150))
p1
plot_ly(type = 'surface' , z = matrix(df),
x=vaccine_efficacy,y=relative_coverage)
library(plotly)
library(plotly)
dt1 <- read.csv("../data/Incidence_8Dec2017.csv", header=T)
dt1$infection_per_million <- dt1$total_infections/1000000
dt1 <- dt1[,c("relative_coverage", "vaccine_efficacy", "infection_per_million")]
df <-acast(dt1, vaccine_efficacy~ relative_coverage, value.var="infection_per_million")
vaccine_efficacy <- seq(0.001, 0.601, by=0.01)
relative_coverage <- seq(0,0.99, by=0.01)
dim(df)
length(vaccine_efficacy)
length(relative_coverage)
plot_ly(type = 'surface' , z = matrix(df),
x=vaccine_efficacy,y=relative_coverage)
plot_ly(type = 'surface' , x=vaccine_efficacy,y=relative_coverage, z = matrix(df), )
plot_ly(type = 'surface' , x=vaccine_efficacy,y=relative_coverage, z = matrix(df))
plot_ly(type = 'surface' , x=vaccine_efficacy,y=relative_coverage, z = (df))
plot_ly(type = 'surface' , x=vaccine_efficacy,y=relative_coverage, z = (df))%>%
layout(
scene = list(
yaxis=list(title="Vaccination coverage"),
xaxis=list(title="Vaccine efficacy"),
zaxis=list(title ="Infections (millions)")))
df <-acast(dt1,  relative_coverage ~vaccine_efficacy, value.var="infection_per_million")
vaccine_efficacy <- seq(0.001, 0.601, by=0.01)
relative_coverage <- seq(0,0.99, by=0.01)
dim(df)
length(vaccine_efficacy)
length(relative_coverage)
df <-acast(dt1,  relative_coverage ~vaccine_efficacy, value.var="infection_per_million")
vaccine_efficacy <- seq(0.001, 0.601, by=0.01)
relative_coverage <- seq(0,0.99, by=0.01)
dim(df)
length(vaccine_efficacy)
length(relative_coverage)
plot_ly(type = 'surface' , x=relative_coverage, y=vaccine_efficacy, z = (df))%>%
layout(
scene = list(
xaxis=list(title="Vaccination coverage"),
yaxis=list(title="Vaccine efficacy"),
zaxis=list(title ="Infections (millions)")))
library(plotly)
dt1 <- read.csv("../data/Incidence_8Dec2017.csv", header=T)
dt1$infection_per_million <- dt1$total_infections/1000000
dt1 <- dt1[,c("relative_coverage", "vaccine_efficacy", "infection_per_million")]
df <-acast(dt1,  relative_coverage ~vaccine_efficacy, value.var="infection_per_million")
vaccine_efficacy <- seq(0.001, 0.601, by=0.01)
relative_coverage <- seq(0,0.99, by=0.01)
##check dimension
dim(df)
length(vaccine_efficacy)
length(relative_coverage)
plot_ly(type = 'surface' , x=relative_coverage, y=vaccine_efficacy, z = (df))%>%
layout(
scene = list(
xaxis=list(title="Vaccination coverage"),
yaxis=list(title="Vaccine efficacy"),
zaxis=list(title ="Infections (millions)")))
library(ggplot2)
library(gridExtra)
library(grid)
library(plyr)
library(lattice)
library(reshape)
library(RColorBrewer)   # for brewer.pal(...)
library(cowplot)
library(Hmisc)
library(plotly)
library(plot3D)
################################################################
dt1 <- read.csv("../data/Incidence_8Dec2017.csv", header=T)
dt1$infection_per_million <- dt1$total_infections/1000000
dt1 <- dt1[,c("relative_coverage", "vaccine_efficacy", "infection_per_million")]
dt2 <- read.csv("../data/Hospitalizations_8Dec2017.csv", header=T)
str(dt2)
dh <- read.csv("../data/historical_seasons_data.csv", header=T)
dh$infection_per_million <- dh$infections
str(dh)
dh<- na.omit(dh)
#####################################################################
## some pretty colors
library(RColorBrewer)
k <- 11
my.cols <- rev(brewer.pal(k, "RdYlBu"))
#jet.colors <- colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan", "#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(10,50, 100,  150))
p1
ggsave("infections_2017.eps", p1, height = 5, width =8)
p1
min(dt1$infection_per_million)
max(dt1$infection_per_million)
library(ggplot2)
library(gridExtra)
library(grid)
library(plyr)
library(lattice)
library(reshape)
library(RColorBrewer)   # for brewer.pal(...)
library(cowplot)
library(Hmisc)
library(plotly)
library(plot3D)
################################################################
dt1 <- read.csv("../data/Incidence_8Dec2017.csv", header=T)
dt1$infection_per_million <- dt1$total_infections/1000000
dt1 <- dt1[,c("relative_coverage", "vaccine_efficacy", "infection_per_million")]
dt2 <- read.csv("../data/Hospitalizations_8Dec2017.csv", header=T)
str(dt2)
dh <- read.csv("../data/historical_seasons_data.csv", header=T)
dh$infection_per_million <- dh$infections
str(dh)
dh<- na.omit(dh)
#####################################################################
## some pretty colors
library(RColorBrewer)
k <- 11
my.cols <- rev(brewer.pal(k, "RdYlBu"))
#jet.colors <- colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan", "#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(10,50, 100,  150))
p1
min(dt1$infection_per_million)
max(dt1$infection_per_million)
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(0, 25,50, 100, 150,200))
p1
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(0, 25,50, 100, 150,200,250))
p1
library(ggplot2)
library(gridExtra)
library(grid)
library(plyr)
library(lattice)
library(reshape)
library(RColorBrewer)   # for brewer.pal(...)
library(cowplot)
library(Hmisc)
library(plotly)
library(plot3D)
################################################################
dt1 <- read.csv("../data/Incidence_8Dec2017.csv", header=T)
dt1$infection_per_million <- dt1$total_infections/1000000
dt1 <- dt1[,c("relative_coverage", "vaccine_efficacy", "infection_per_million")]
dt2 <- read.csv("../data/Hospitalizations_8Dec2017.csv", header=T)
str(dt2)
dh <- read.csv("../data/historical_seasons_data.csv", header=T)
dh$infection_per_million <- dh$infections
str(dh)
dh<- na.omit(dh)
#####################################################################
## some pretty colors
library(RColorBrewer)
k <- 11
my.cols <- rev(brewer.pal(k, "RdYlBu"))
#jet.colors <- colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan", "#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(0, 25,50, 100, 150,200,250))
p1
library(ggplot2)
library(gridExtra)
library(grid)
library(plyr)
library(lattice)
library(reshape)
library(RColorBrewer)   # for brewer.pal(...)
library(cowplot)
library(Hmisc)
library(plotly)
library(plot3D)
################################################################
dt1 <- read.csv("../data/Incidence_8Dec2017.csv", header=T)
dt1$infection_per_million <- dt1$total_infections/1000000
dt1 <- dt1[,c("relative_coverage", "vaccine_efficacy", "infection_per_million")]
dt2 <- read.csv("../data/Hospitalizations_8Dec2017.csv", header=T)
str(dt2)
dh <- read.csv("../data/historical_seasons_data.csv", header=T)
dh$infection_per_million <- dh$infections
str(dh)
dh<- na.omit(dh)
#####################################################################
## some pretty colors
library(RColorBrewer)
k <- 11
my.cols <- rev(brewer.pal(k, "RdYlBu"))
#jet.colors <- colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan", "#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(0, 25,50, 100, 150,200,250))
p1
ggsave("infections_2017.eps", p1, height = 5, width =8)
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(0, 25,50, 100, 150,200,250))+
theme(legend.title=element_blank())
p1
ggsave("infections_2017.eps", p1, height = 5, width =8)
str(dt2)
dt2 <- read.csv("../data/Hospitalizations_8Dec2017.csv", header=T)
dt2$hospitalization_per_million <- dt2$total_hospitalizations/1000000
dt2 <- dt2[,c("relative_coverage", "vaccine_efficacy", "hospitalization_per_million ")]
dt2 <- read.csv("../data/Hospitalizations_8Dec2017.csv", header=T)
dt2$hospitalization_per_million <- dt2$total_hospitalizations/1000000
dt2 <- dt2[,c("relative_coverage", "vaccine_efficacy", "hospitalization_per_million ")]
str(dt2)
dt2 <- dt2[,c("relative_coverage", "vaccine_efficacy", "hospitalization_per_million")]
dt2 <- read.csv("../data/Hospitalizations_8Dec2017.csv", header=T)
dt2$hospitalization_per_million <- dt2$total_hospitalizations/1000000
dt2 <- dt2[,c("relative_coverage", "vaccine_efficacy", "hospitalization_per_million")]
str(dt2)
dh <- read.csv("../data/historical_seasons_data.csv", header=T)
dh$infection_per_million <- dh$infections
str(dh)
dh<- na.omit(dh)
p2 <- ggplot(dt2, aes(x=vaccine_efficacy, y=relative_coverage, fill = total_hospitalizations))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(0, 25,50, 100, 150,200,250))
p2
p2 <- ggplot(dt2, aes(x=vaccine_efficacy, y=relative_coverage, fill = hospitalization_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(0, 25,50, 100, 150,200,250))+
theme(legend.title=element_blank())
p2
p2 <- ggplot(dt2, aes(x=vaccine_efficacy, y=relative_coverage, fill = hospitalization_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(0, 25,50, 100, 150,200,250))+
theme(legend.title=element_blank())
p2
ggsave("hospitalization_2017.eps", p1, height = 5, width =8)
p2 <- ggplot(dt2, aes(x=vaccine_efficacy, y=relative_coverage, fill = hospitalization_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(0, 25,50, 100, 150,200,250))+
theme(legend.title=element_blank())
p2
ggsave("hospitalization_2017.eps", p2, height = 5, width =8)
p2 <- ggplot(dt2, aes(x=vaccine_efficacy, y=relative_coverage, fill = hospitalization_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(0, 25,50, 100, 150,200,250))+
theme(legend.title=element_blank())
p2 <- ggplot(dt2, aes(x=vaccine_efficacy, y=relative_coverage, fill = hospitalization_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(0, 25,50, 100, 150,200,250))
p2
p2 <- ggplot(dt2, aes(x=vaccine_efficacy, y=relative_coverage, fill = hospitalization_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(0, 25,50, 100, 150,200,250))
p2
ggsave("hospitalization_2017.eps", p2, height = 5, width =8)
