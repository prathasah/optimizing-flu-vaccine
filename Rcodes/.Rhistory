library(ggplot2)
library(gridExtra)
library(grid)
library(plyr)
library(lattice)
library(reshape)
library(RColorBrewer)   # for brewer.pal(...)
library(cowplot)
library(Hmisc)
dt1 <- read.csv("../data/Incidence_8Dec2017.csv", header=T)
tail(dt)
dt2 <- read.csv("../data/Hospitalizations_8Dec2017.csv", header=T)
str(dt2)
dh <- read.csv("../data/historical_seasons_data.csv", header=T)
dh$infection_in_million <- dh$infections
str(dh)
library(RColorBrewer)
k <- 11
my.cols <- rev(brewer.pal(k, "RdYlBu"))
dt1$infection_per_million <- dt1$total_infections/1000000
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_point(data=dh, aes(x=vaccine_efficacy, y=coverage))+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(10,50, 100,  150))
p1
dt1$infection_per_million <- dt1$total_infections/1000000
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_point(data=dh, aes(x=vaccine_efficacy, y=coverage))+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(10,50, 100,  150))
p1
str(dt1)
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
# geom_point(data=dh, aes(x=vaccine_efficacy, y=coverage))+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(10,50, 100,  150))
p1
ggsave("infections_2017.eps", p1, height = 5, width =8)
ggsave("infections_2017.eps", p1, height = 5, width =8)
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_point(data=dh, aes(x=vaccine_efficacy, y=coverage))+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(10,50, 100,  150))
p1
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_point(data=dh, aes(x=vaccine_efficacy, y=coverage, z= infection_in_million))+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(10,50, 100,  150))
p1
dt1 <- read.csv("../data/Incidence_8Dec2017.csv", header=T)
tail(dt)
dt2 <- read.csv("../data/Hospitalizations_8Dec2017.csv", header=T)
str(dt2)
dh <- read.csv("../data/historical_seasons_data.csv", header=T)
dh$infection_per_million <- dh$infections
str(dh)
library(RColorBrewer)
k <- 11
my.cols <- rev(brewer.pal(k, "RdYlBu"))
dt1$infection_per_million <- dt1$total_infections/1000000
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_point(data=dh, aes(x=vaccine_efficacy, y=coverage, z= infection_in_million))+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(10,50, 100,  150))
p1
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_point(data=dh, aes(x=vaccine_efficacy, y=coverage, z= infection_per_million))+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(10,50, 100,  150))
p1
ggsave("infections_2017.eps", p1, height = 5, width =8)
ggsave("infections_2017.eps", p1, height = 5, width =8)
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_point(data=dh, aes(x=vaccine_efficacy, y=coverage, z= NULL))+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(10,50, 100,  150))
p1
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(10,50, 100,  150))
p1 +  geom_point(data=dh, aes(x=vaccine_efficacy, y=coverage, z= NULL))+
ggsave("infections_2017.eps", p1, height = 5, width =8)
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(10,50, 100,  150))
p1
p1 +  geom_point(data=dh, aes(x=vaccine_efficacy, y=coverage, z= NULL))+
ggsave("infections_2017.eps", p1, height = 5, width =8)
p1
p1 +  geom_point(data=dh, aes(x=vaccine_efficacy, y=coverage, fill=factor(infection_per_million)), pch=21)+
ggsave("infections_2017.eps", p1, height = 5, width =8)
dh
dh<- na.omit(dh)
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(10,50, 100,  150))
p1
p1 +  geom_point(data=dh, aes(x=vaccine_efficacy, y=coverage, fill=factor(infection_per_million)), pch=21)+
ggsave("infections_2017.eps", p1, height = 5, width =8)
p1
p1 +  geom_point(data=dh, aes(x=vaccine_efficacy, y=coverage, z=NULL), pch=21)+
ggsave("infections_2017.eps", p1, height = 5, width =8)
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(10,50, 100,  150))
p1 +  geom_point(data=dh, aes(x=vaccine_efficacy, y=coverage, fill=factor(infection_per_million)), pch=21)+
ggsave("infections_2017.eps", p1, height = 5, width =8)
str(dh)
p1 +  geom_point(data=dh, aes(x=vaccine_efficacy, y=coverage, fill=(infection_per_million)), pch=21)+
ggsave("infections_2017.eps", p1, height = 5, width =8)
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(10,50, 100,  150))
p1
p1 +  geom_point(data=dh, aes(x=vaccine_efficacy, y=coverage, fill=(infection_per_million)), pch=21)+
ggsave("infections_2017.eps", p1, height = 5, width =8)
p1 +  geom_point(data=dh, aes(x=vaccine_efficacy, y=coverage, fill=(infection_per_million)), pch=21)+
ggsave("infections_2017.eps", p1, height = 5, width =8)
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(10,50, 100,  150))
p1 <- p1 +  geom_point(data=dh, aes(x=vaccine_efficacy, y=coverage, fill=(infection_per_million)), pch=21)+
ggsave("infections_2017.eps", p1, height = 5, width =8)
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(10,50, 100,  150))
p1
p1 <- p1 +  geom_point(data=dh, aes(x=vaccine_efficacy, y=coverage, fill=(infection_per_million)), pch=21)
ggsave("infections_2017.eps", p1, height = 5, width =8)
library(ggplot2)
library(gridExtra)
library(grid)
library(plyr)
library(lattice)
library(reshape)
library(RColorBrewer)   # for brewer.pal(...)
library(cowplot)
library(Hmisc)
################################################################
dt1 <- read.csv("../data/Incidence_8Dec2017.csv", header=T)
tail(dt)
dt2 <- read.csv("../data/Hospitalizations_8Dec2017.csv", header=T)
str(dt2)
dh <- read.csv("../data/historical_seasons_data.csv", header=T)
dh$infection_per_million <- dh$infections
str(dh)
dh<- na.omit(dh)
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(10,50, 100,  150))
p1
dh <- read.csv("../data/historical_seasons_data.csv", header=T)
dh$infection_per_million <- dh$infections
str(dh)
dh<- na.omit(dh)
library(RColorBrewer)
k <- 11
my.cols <- rev(brewer.pal(k, "RdYlBu"))
dt1$infection_per_million <- dt1$total_infections/1000000
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(10,50, 100,  150))
p1
p1 <- p1 +  geom_point(data=dh, aes(x=vaccine_efficacy, y=relative_coverage, fill=(infection_per_million)), pch=21)
p1
p1 <- p1 +  geom_point(data=dh, aes(x=vaccine_efficacy, y=relative_coverage, fill=(infection_per_million)), pch=21)
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(10,50, 100,  150))
p1
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(10,50, 100,  150))
p1
ggsave("infections_2017.eps", p1, height = 5, width =8)
install.packages("plotly")
library(plotly)
ggplotly(p1)
data_z <- acast(dt1, vaccine_efficacy~relative_coverage, value.var = "infection_per_million")
library(reshape)
data_z <- acast(dt1, vaccine_efficacy~relative_coverage, value.var = "infection_per_million")
p1 <-qplot(vaccine_efficacy, relative_coverage, data= dt1), geom="tile", fill=infection_per_million)
p1 <-qplot(vaccine_efficacy, relative_coverage, data= dt1, geom="tile", fill=infection_per_million)
ggplotly(p1)
qplot(vaccine_efficacy, relative_coverage, data= dt1, geom="tile", fill=infection_per_million)
ggplotly()
require(rgl)
library(rgl)
open3d()
library(rgl)
library(rgl)
open3d()
jet.colors <-   # function from grDevices package
colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan",
"#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
colorzjet <- jet.colors(100)  # 100 separate color
rgl.surface(x=dt1$vaccine_efficacy, y= dt1$relative_coverage,
coords=c(1,3,2),z=dt1$infection_per_million,
color=colorzjet[ findInterval(Z, seq(min(Z), max(Z), length=100))] )
surface3d(dt1$vaccine_efficacy, dt1$relative_coverage , dt1$infection_per_million,color="blue")
surface3d(dt1$vaccine_efficacy, dt1$relative_coverage , dt1$infection_per_million,color="blue")
surface3d(dt1$vaccine_efficacy, dt1$relative_coverage , dt1$infection_per_million,color="blue")
library(rgl)
rgl.surface(dt1$vaccine_efficacy, dt1$relative_coverage, dt1$infection_per_million, color=my.cols, back="lines")
rgl.open()
rgl.surface(dt1$vaccine_efficacy, dt1$relative_coverage, dt1$infection_per_million, color=my.cols, back="lines")
zlim <- range(dt1$infection_per_million)
zlen <- zlim[2] - zlim[1] + 1
colorlut <- terrain.colors(zlen)
col <- colorlut[ z-zlim[1]+1 ]
col <- colorlut[ dt1$infection_per_million-zlim[1]+1 ]
rgl.open()
rgl.surface(dt1$vaccine_efficacy, dt1$relative_coverage, dt1$infection_per_million, color=my.cols, back="lines")
rgl.open()
rgl.surface(dt1$vaccine_efficacy, dt1$relative_coverage, dt1$infection_per_million, color=my.cols, back="lines")
rgl.open()
rgl.surface(dt1$vaccine_efficacy, dt1$relative_coverage, dt1$infection_per_million, color=my.cols, back="lines")
py <- plotly(username="prathasah", key="ps123456")
py <- ggplotly(username="prathasah", key="ps123456")
py$ggplotly(p1)
library(ggplot2)
library(gridExtra)
library(grid)
library(plyr)
library(lattice)
library(reshape)
library(RColorBrewer)   # for brewer.pal(...)
library(cowplot)
library(Hmisc)
library(plotly)
################################################################
dt1 <- read.csv("../data/Incidence_8Dec2017.csv", header=T)
tail(dt)
dt2 <- read.csv("../data/Hospitalizations_8Dec2017.csv", header=T)
str(dt2)
dh <- read.csv("../data/historical_seasons_data.csv", header=T)
dh$infection_per_million <- dh$infections
str(dh)
dh<- na.omit(dh)
#####################################################################
## some pretty colors
library(RColorBrewer)
k <- 11
my.cols <- rev(brewer.pal(k, "RdYlBu"))
dt1$infection_per_million <- dt1$total_infections/1000000
#jet.colors <- colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan", "#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(10,50, 100,  150))
p1
py <- ggplotly(username="prathasah", key="ps123456")
py$ggplotly(p1)
p1
py <- ggplotly(username="prathasah", key="ps123456")
py <- ggplotly(username="prathasah", key="ps123456")
py$ggplotly(p1)
py <- ggplotly(username="prathasah", key="••••••••••")
py$ggplotly(p1)
py <- ggplotly(username="prathasah", key="tpd5c4leok")
py$ggplotly(p1)
ggplotly(p1)
plot_ly (type = ‘surface’ , z = ~dt1$infection_per_million, x=dt1$vaccine_efficacy,y=dt1$relative_coverage )
plot_ly (type = 'surface' , z = ~dt1$infection_per_million, x=dt1$vaccine_efficacy,y=dt1$relative_coverage )
df <-acast(dt1, vaccine_efficacy~ relative_coverage, value.var="infection_per_million")
library(reshape2)
df <-acast(dt1, vaccine_efficacy~ relative_coverage, value.var="infection_per_million")
plot_ly (type = 'surface' , z = ~df$infection_per_million, x=df$vaccine_efficacy,y=df$relative_coverage )
plot_ly (type = 'surface' , z = df$infection_per_million, x=df$vaccine_efficacy,y=df$relative_coverage )
plot_ly (df, type = 'surface' , z = infection_per_million, x=vaccine_efficacy,y=relative_coverage )
df
plot_ly (df, type = 'surface' , z = infection_per_million, x=vaccine_efficacy,y=relative_coverage )
df <- data.frame(df)
plot_ly (df, type = 'surface' , z = infection_per_million, x=vaccine_efficacy,y=relative_coverage )
str(df)
str(dt1)
dt1 <- dt[,c("relative_coverage", "vaccine_efficacy", "total_infections")]
dt1 <- read.csv("../data/Incidence_8Dec2017.csv", header=T)
dt1 <- dt1[,c("relative_coverage", "vaccine_efficacy", "total_infections")]
tail(dt)
dt1 <- read.csv("../data/Incidence_8Dec2017.csv", header=T)
dt1$infection_per_million <- dt1$total_infections/1000000
dt1 <- read.csv("../data/Incidence_8Dec2017.csv", header=T)
dt1$infection_per_million <- dt1$total_infections/1000000
dt1 <- dt1[,c("relative_coverage", "vaccine_efficacy", "infection_per_million")]
tail(dt)
dt1 <- dt1[,c("relative_coverage", "vaccine_efficacy", "infection_per_million")]
dt2 <- read.csv("../data/Hospitalizations_8Dec2017.csv", header=T)
str(dt2)
dh <- read.csv("../data/historical_seasons_data.csv", header=T)
dh$infection_per_million <- dh$infections
str(dh)
dh<- na.omit(dh)
library(RColorBrewer)
k <- 11
my.cols <- rev(brewer.pal(k, "RdYlBu"))
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(10,50, 100,  150))
p1
ggsave("infections_2017.eps", p1, height = 5, width =8)
library(reshape2)
df <-acast(dt1, vaccine_efficacy~ relative_coverage, value.var="infection_per_million")
df <- data.frame(df)
str(df)
df <-acast(dt1, vaccine_efficacy~ relative_coverage, value.var="infection_per_million")
plot_ly (df, type = 'surface' , z = infection_per_million, x=vaccine_efficacy,y=relative_coverage )
df
df <-acast(dt1, vaccine_efficacy~ relative_coverage, value.var="infection_per_million")
df <- df[,-1]
df
df <-acast(dt1, vaccine_efficacy~ relative_coverage, value.var="infection_per_million")
df <- data.frame(df)
str(df)
plot_ly (type = 'surface' , z = df x=vaccine_efficacy,y=relative_coverage )
plot_ly (type = 'surface' , z = df, x=vaccine_efficacy,y=relative_coverage )
vaccine_efficacy <- seq(0.001, 0.601, by=0.001)
vaccine_efficacy
vaccine_efficacy <- seq(0.001, 0.601, by=0.001)
relative_coverage <- seq(0,1, by=0.01)
plot_ly (type = 'surface' , z = df, x=vaccine_efficacy,y=relative_coverage )
shape(df)
dim(df)
length(vaccine_efficacy)
vaccine_efficacy <- seq(0.001, 0.601, by=0.01)
relative_coverage <- seq(0,1, by=0.01)
length(vaccine_efficacy)
length(relative_coverage)
vaccine_efficacy <- seq(0.001, 0.601, by=0.01)
relative_coverage <- seq(0,0.99, by=0.01)
plot_ly (type = 'surface' , z = df, x=vaccine_efficacy,y=relative_coverage )
dim(df)
vaccine_efficacy
len(vaccine_efficacy)
length(vaccine_efficacy)
length(relative_coverage)
plot_ly(type = 'surface' , z = df, x=vaccine_efficacy,y=relative_coverage )
plot_ly(type = 'surface' , z = matrix(df), x=vaccine_efficacy,y=relative_coverage )
plot_ly(type = 'surface' , z = matrix(df),
x=vaccine_efficacy,y=relative_coverage,
yaxis=dict(text="Vaccination coverage"))
plot_ly(type = 'surface' , z = matrix(df),
x=vaccine_efficacy,y=relative_coverage,
yaxis=list(text="Vaccination coverage"))
plot_ly(type = 'surface' , z = matrix(df),
x=vaccine_efficacy,y=relative_coverage,
y=list(text="Vaccination coverage"))
plot_ly(type = 'surface' , z = matrix(df),
x=vaccine_efficacy,y=relative_coverage,
y=list(text="Vaccination coverage"),
x=list(text="Vaccine efficacy"),
z=list(text="Infections (in millions)"))
plot_ly(type = 'surface' , z = matrix(df),
x=vaccine_efficacy,y=relative_coverage)%>%
layout(
yaxis=list(text="Vaccination coverage"),
xaxis=list(text="Vaccine efficacy"),
zaxis=list(text="Infections (in millions)"))
plot_ly(type = 'surface' , z = matrix(df),
x=vaccine_efficacy,y=relative_coverage)%>%
layout(
yaxis=list(text="Vaccination coverage"),
xaxis=list(text="Vaccine efficacy"))
plot_ly(type = 'surface' , z = matrix(df),
x=vaccine_efficacy,y=relative_coverage)%>%
layout(
scene = list(
yaxis=list(text="Vaccination coverage"),
xaxis=list(text="Vaccine efficacy")))
plot_ly(type = 'surface' , z = matrix(df),
x=vaccine_efficacy,y=relative_coverage)%>%
layout(
scene = list(
yaxis=list(title="Vaccination coverage"),
xaxis=list(title="Vaccine efficacy"),
zaxis=list(title="Infections (millions)")))
plot_ly(type = 'surface' , z = matrix(df),
x=vaccine_efficacy,y=relative_coverage)%>%
layout(
scene = list(
yaxis=list(title="Vaccination coverage"),
xaxis=list(title="Vaccine efficacy"),
zaxis=list(title="Infections (millions)")))
df <-acast(dt1, relative_coverage~vaccine_efficacy, value.var="infection_per_million")
vaccine_efficacy <- seq(0.001, 0.601, by=0.01)
relative_coverage <- seq(0,0.99, by=0.01)
plot_ly(type = 'surface' , z = matrix(df),
y=vaccine_efficacy,x=relative_coverage)%>%
layout(
scene = list(
xaxis=list(title="Vaccination coverage"),
yaxis=list(title="Vaccine efficacy"),
zaxis=list(title="Infections (millions)")))
df <-acast(dt1, relative_coverage~vaccine_efficacy, value.var="infection_per_million")
dim(a)
dim(df)
vaccine_efficacy <- seq(0.001, 0.601, by=0.01)
relative_coverage <- seq(0,0.99, by=0.01)
length(vaccine_coverage)
vaccine_efficacy <- seq(0.001, 0.601, by=0.01)
relative_coverage <- seq(0,0.99, by=0.01)
length(relative_coverage)
plot_ly(type = 'surface' , z = matrix(df), x=relative_coverage,
y=vaccine_efficacy,)%>%
layout(
scene = list(
xaxis=list(title="Vaccination coverage"),
yaxis=list(title="Vaccine efficacy"),
zaxis=list(title="Infections (millions)")))
plot_ly(type = 'surface' , z = matrix(df),
x=vaccine_efficacy,y=relative_coverage)%>%
layout(
scene = list(
yaxis=list(title="Vaccination coverage"),
xaxis=list(title="Vaccine efficacy"),
zaxis=list(title="Infections (millions")))
library(reshape2)
df <-acast(dt1, vaccine_efficacy~ relative_coverage, value.var="infection_per_million")
vaccine_efficacy <- seq(0.001, 0.601, by=0.01)
relative_coverage <- seq(0,0.99, by=0.01)
plot_ly(type = 'surface' , z = matrix(df),
x=vaccine_efficacy,y=relative_coverage)%>%
layout(
scene = list(
yaxis=list(title="Vaccination coverage"),
xaxis=list(title="Vaccine efficacy"),
zaxis=list(title="Infections (millions")))
library(ggplot2)
library(gridExtra)
library(grid)
library(plyr)
library(lattice)
library(reshape)
library(RColorBrewer)   # for brewer.pal(...)
library(cowplot)
library(Hmisc)
library(plotly)
################################################################
dt1 <- read.csv("../data/Incidence_8Dec2017.csv", header=T)
dt1$infection_per_million <- dt1$total_infections/1000000
dt1 <- dt1[,c("relative_coverage", "vaccine_efficacy", "infection_per_million")]
dt2 <- read.csv("../data/Hospitalizations_8Dec2017.csv", header=T)
str(dt2)
dh <- read.csv("../data/historical_seasons_data.csv", header=T)
dh$infection_per_million <- dh$infections
str(dh)
dh<- na.omit(dh)
#####################################################################
## some pretty colors
library(RColorBrewer)
k <- 11
my.cols <- rev(brewer.pal(k, "RdYlBu"))
#jet.colors <- colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan", "#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(10,50, 100,  150))
p1
library(reshape2)
df <-acast(dt1, vaccine_efficacy~ relative_coverage, value.var="infection_per_million")
vaccine_efficacy <- seq(0.001, 0.601, by=0.01)
relative_coverage <- seq(0,0.99, by=0.01)
plot_ly(type = 'surface' , z = matrix(df),
x=vaccine_efficacy,y=relative_coverage)%>%
layout(
scene = list(
yaxis=list(title="Vaccination coverage"),
xaxis=list(title="Vaccine efficacy"),
zaxis=list(title="Infections (millions")))
df <-acast(dt1, vaccine_efficacy~ relative_coverage, value.var="infection_per_million")
vaccine_efficacy <- seq(0.001, 0.601, by=0.01)
relative_coverage <- seq(0,0.99, by=0.01)
plot_ly(type = 'surface' , z = matrix(df),
x=vaccine_efficacy,y=relative_coverage)%>%
layout(
scene = list(
yaxis=list(title="Vaccination coverage"),
xaxis=list(title="Vaccine efficacy"),
zaxis=list(title="Infections (millions")))
plot_ly(type = 'surface' , z = ~matrix(df),
x=~vaccine_efficacy,y=~relative_coverage)%>%
layout(
scene = list(
yaxis=list(title="Vaccination coverage"),
xaxis=list(title="Vaccine efficacy"),
zaxis=list(title="Infections (millions")))
plot_ly(type = 'surface' , z = matrix(df),
x=vaccine_efficacy,y=relative_coverage)%>%
layout(
scene = list(
yaxis=list(title="Vaccination coverage"),
xaxis=list(title="Vaccine efficacy")))
