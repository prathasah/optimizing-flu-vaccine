dt1$infection_per_million <- dt1$total_infections/1000000
dt1 <- dt1[,c("relative_coverage", "vaccine_efficacy", "infection_per_million")]
dt2 <- read.csv("../data/Hospitalizations_8Dec2017.csv", header=T)
str(dt2)
dh <- read.csv("../data/historical_seasons_data.csv", header=T)
dh$infection_per_million <- dh$infections
str(dh)
dh<- na.omit(dh)
#####################################################################
## some pretty colors
library(RColorBrewer)
k <- 11
my.cols <- rev(brewer.pal(k, "RdYlBu"))
#jet.colors <- colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan", "#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(0, 25,50, 100, 150,200,250))
p1
ggsave("infections_2017.eps", p1, height = 5, width =8)
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(0, 25,50, 100, 150,200,250))+
theme(legend.title=element_blank())
p1
ggsave("infections_2017.eps", p1, height = 5, width =8)
str(dt2)
dt2 <- read.csv("../data/Hospitalizations_8Dec2017.csv", header=T)
dt2$hospitalization_per_million <- dt2$total_hospitalizations/1000000
dt2 <- dt2[,c("relative_coverage", "vaccine_efficacy", "hospitalization_per_million ")]
dt2 <- read.csv("../data/Hospitalizations_8Dec2017.csv", header=T)
dt2$hospitalization_per_million <- dt2$total_hospitalizations/1000000
dt2 <- dt2[,c("relative_coverage", "vaccine_efficacy", "hospitalization_per_million ")]
str(dt2)
dt2 <- dt2[,c("relative_coverage", "vaccine_efficacy", "hospitalization_per_million")]
dt2 <- read.csv("../data/Hospitalizations_8Dec2017.csv", header=T)
dt2$hospitalization_per_million <- dt2$total_hospitalizations/1000000
dt2 <- dt2[,c("relative_coverage", "vaccine_efficacy", "hospitalization_per_million")]
str(dt2)
dh <- read.csv("../data/historical_seasons_data.csv", header=T)
dh$infection_per_million <- dh$infections
str(dh)
dh<- na.omit(dh)
p2 <- ggplot(dt2, aes(x=vaccine_efficacy, y=relative_coverage, fill = total_hospitalizations))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(0, 25,50, 100, 150,200,250))
p2
p2 <- ggplot(dt2, aes(x=vaccine_efficacy, y=relative_coverage, fill = hospitalization_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(0, 25,50, 100, 150,200,250))+
theme(legend.title=element_blank())
p2
p2 <- ggplot(dt2, aes(x=vaccine_efficacy, y=relative_coverage, fill = hospitalization_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(0, 25,50, 100, 150,200,250))+
theme(legend.title=element_blank())
p2
ggsave("hospitalization_2017.eps", p1, height = 5, width =8)
p2 <- ggplot(dt2, aes(x=vaccine_efficacy, y=relative_coverage, fill = hospitalization_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(0, 25,50, 100, 150,200,250))+
theme(legend.title=element_blank())
p2
ggsave("hospitalization_2017.eps", p2, height = 5, width =8)
p2 <- ggplot(dt2, aes(x=vaccine_efficacy, y=relative_coverage, fill = hospitalization_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(0, 25,50, 100, 150,200,250))+
theme(legend.title=element_blank())
p2 <- ggplot(dt2, aes(x=vaccine_efficacy, y=relative_coverage, fill = hospitalization_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(0, 25,50, 100, 150,200,250))
p2
p2 <- ggplot(dt2, aes(x=vaccine_efficacy, y=relative_coverage, fill = hospitalization_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(0, 25,50, 100, 150,200,250))
p2
ggsave("hospitalization_2017.eps", p2, height = 5, width =8)
library(ggplot2)
library(gridExtra)
library(grid)
library(plyr)
library(lattice)
library(reshape)
library(RColorBrewer)   # for brewer.pal(...)
library(cowplot)
library(Hmisc)
library(plotly)
library(plot3D)
################################################################
dt1 <- read.csv("../data/Incidence_8Dec2017.csv", header=T)
dt1$infection_per_million <- dt1$total_infections/1000000
dt1 <- dt1[,c("relative_coverage", "vaccine_efficacy", "infection_per_million")]
dt2 <- read.csv("../data/Hospitalizations_8Dec2017.csv", header=T)
dt2$hospitalization_per_million <- dt2$total_hospitalizations/1000000
dt2 <- dt2[,c("relative_coverage", "vaccine_efficacy", "hospitalization_per_million")]
str(dt2)
dh <- read.csv("../data/historical_seasons_data.csv", header=T)
dh$infection_per_million <- dh$infections
str(dh)
dh<- na.omit(dh)
#####################################################################
## some pretty colors
library(RColorBrewer)
k <- 11
my.cols <- rev(brewer.pal(k, "RdYlBu"))
#jet.colors <- colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan", "#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(0, 25,50, 100, 150,200,250))+
theme(legend.title=element_blank())
p1
ggsave("infections_2017.eps", p1, height = 5, width =8)
p2 <- ggplot(dt2, aes(x=vaccine_efficacy, y=relative_coverage, fill = hospitalization_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(0, 25,50, 100, 150,200,250))
p2
ggsave("hospitalization_2017.eps", p2, height = 5, width =8)
#p1 <- p1 +  geom_point(data=dh, aes(x=vaccine_efficacy, y=relative_coverage, fill=(infection_per_million)), pch=21)
library(ggplot2)
library(gridExtra)
library(grid)
library(plyr)
library(lattice)
library(reshape)
library(RColorBrewer)   # for brewer.pal(...)
library(cowplot)
library(Hmisc)
library(plotly)
library(plot3D)
################################################################
dt1 <- read.csv("../data/Incidence_8Dec2017.csv", header=T)
dt1$infection_per_million <- dt1$total_infections/1000000
dt1 <- dt1[,c("relative_coverage", "vaccine_efficacy", "infection_per_million")]
dt2 <- read.csv("../data/Hospitalizations_8Dec2017.csv", header=T)
dt2$hospitalization_per_million <- dt2$total_hospitalizations/1000000
dt2 <- dt2[,c("relative_coverage", "vaccine_efficacy", "hospitalization_per_million")]
str(dt2)
dh <- read.csv("../data/historical_seasons_data.csv", header=T)
dh$infection_per_million <- dh$infections
str(dh)
dh<- na.omit(dh)
#####################################################################
## some pretty colors
library(RColorBrewer)
k <- 11
my.cols <- rev(brewer.pal(k, "RdYlBu"))
p2 <- ggplot(dt2, aes(x=vaccine_efficacy, y=relative_coverage, fill = hospitalization_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(0, 25,50, 100, 150,200,250))
p2
min(dt2$hospitalization_per_million)
max(dt2$hospitalization_per_million)
p2 <- ggplot(dt2, aes(x=vaccine_efficacy, y=relative_coverage, fill = hospitalization_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(0, 1,2, 3,4))
p2
ggsave("hospitalization_2017.eps", p2, height = 5, width =8)
p2 <- ggplot(dt2, aes(x=vaccine_efficacy, y=relative_coverage, fill = hospitalization_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(0, 1,2, 3,4))+
theme(legend.title=element_blank())
p2
ggsave("hospitalization_2017.eps", p2, height = 5, width =8)
library(ggplot2)
library(gridExtra)
library(grid)
library(plyr)
library(lattice)
library(reshape)
library(RColorBrewer)   # for brewer.pal(...)
library(cowplot)
library(Hmisc)
library(plotly)
library(plot3D)
################################################################
dt1 <- read.csv("../data/Incidence_8Dec2017.csv", header=T)
dt1$infection_per_million <- dt1$total_infections/1000000
dt1 <- dt1[,c("relative_coverage", "vaccine_efficacy", "infection_per_million")]
dt2 <- read.csv("../data/Hospitalizations_8Dec2017.csv", header=T)
dt2$hospitalization_per_million <- dt2$total_hospitalizations/1000000
dt2 <- dt2[,c("relative_coverage", "vaccine_efficacy", "hospitalization_per_million")]
str(dt2)
dh <- read.csv("../data/historical_seasons_data.csv", header=T)
dh$infection_per_million <- dh$infections
str(dh)
dh<- na.omit(dh)
#####################################################################
## some pretty colors
library(RColorBrewer)
k <- 11
my.cols <- rev(brewer.pal(k, "RdYlBu"))
#jet.colors <- colorRampPalette(c("#00007F", "blue", "#007FFF", "cyan", "#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"))
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(0, 25,50, 100, 150,200,250))+
theme(legend.title=element_blank())+ggtitle("Influenza cases")
p1
ggsave("infections_2017.eps", p1, height = 5, width =8)
p2 <- ggplot(dt2, aes(x=vaccine_efficacy, y=relative_coverage, fill = hospitalization_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(0, 1,2, 3,4))+
theme(legend.title=element_blank())+ggtitle("Case hospitalizations")
p2
ggsave("hospitalization_2017.eps", p2, height = 5, width =8)
#p1 <- p1 +  geom_point(data=dh, aes(x=vaccine_efficacy, y=relative_coverage, fill=(infection_per_million)), pch=21)
dt1 <- read.csv("../data/vaccinated_comparisons_8Dec2017.csv", header=T)
dt <- read.csv("../data/vaccinated_comparisons_8Dec2017.csv", header=T)
str(dt)
dt$vac_prob_infection <- dt$vaccinated_total_infections/dt$total_vaccinated
dt$vac_prob_infection <- dt$vaccinated_total_infections/dt$total_vaccinated
dt$unvac_prob_infection <- dt$unvaccinated_total_infections/dt$total_unvaccinated
summary(factor(dt$relative_coverage))
str(dt)
dt1 <- dt[,c("relative_coverage", "vaccine_efficacy", "vac_prob_infection")]
dt2 <- dt[,c("relative_coverage", "vaccine_efficacy", "unvac_prob_infection")]
dt1$type <- "vaccinated"
dt2$type <- "unvaccinated"
colnames(dt1)["vac_prob_infection"] <- "prob_infection"
colnames(dt1)[3] <- "prob_infection"
str(dt1)
colnames(dt2)[3] <- "prob_infection"
df <- rbind(dt1, dt2)
df1 <- subset(df, df$relative_coverage = 0.1)
df1 <- subset(df, df$relative_coverage == 0.1)
p1 <- ggplot(df1, aes(x=vaccine_efficacy, y=relative_coverage, color = type))+
theme_bw()+
geom_point() + geom_line()
p1
p1 <- ggplot(df1, aes(x=vaccine_efficacy, y=prob_infection, color = type))+
theme_bw()+
geom_point() + geom_line()+
xlab("vaccine efficacy")+ ylab("Probability of infection")
p1
unique(df1$relative_coverage)
p1 <- ggplot(df1, aes(x=vaccine_efficacy, y=prob_infection, color = type))+
theme_bw()+  geom_point() + geom_line()+
xlab("vaccine efficacy")+ ylab("Probability of infection")+
ggtitle(paste("Relative coverage = ", unique(df1$relative_coverage)))
p1
de <- rbind(df1,df2,df3,df4,df5,df6,df7,df8)
df1 <- subset(df, df$relative_coverage == 0.1)
df2 <- subset(df, df$relative_coverage == 0.2)
df3 <- subset(df, df$relative_coverage == 0.3)
df4 <- subset(df, df$relative_coverage == 0.4)
df5 <- subset(df, df$relative_coverage == 0.5)
df6 <- subset(df, df$relative_coverage == 0.6)
df7 <- subset(df, df$relative_coverage == 0.7)
df8 <- subset(df, df$relative_coverage == 0.8)
de <- rbind(df1,df2,df3,df4,df5,df6,df7,df8)
p1 <- ggplot(df1, aes(x=vaccine_efficacy, y=prob_infection, color = type))+
theme_bw()+  geom_point() + geom_line()+
xlab("vaccine efficacy")+ ylab("Probability of infection")+ facet_grid(.~relative_coverage)
p1
p1 <- ggplot(dfe, aes(x=vaccine_efficacy, y=prob_infection, color = type))+
theme_bw()+  geom_point() + geom_line()+
xlab("vaccine efficacy")+ ylab("Probability of infection")+ facet_grid(.~relative_coverage)
p1
p1 <- ggplot(de, aes(x=vaccine_efficacy, y=prob_infection, color = type))+
theme_bw()+  geom_point() + geom_line()+
xlab("vaccine efficacy")+ ylab("Probability of infection")+ facet_grid(.~relative_coverage)
p1
p1 <- ggplot(de, aes(x=vaccine_efficacy, y=prob_infection, color = type))+
theme_bw()+  geom_point() + geom_line()+
xlab("vaccine efficacy")+ ylab("Probability of infection")+ facet_grid(relative_coverage.~)
p1
p1 <- ggplot(de, aes(x=vaccine_efficacy, y=prob_infection, color = type))+
theme_bw()+  geom_point() + geom_line()+
xlab("vaccine efficacy")+ ylab("Probability of infection")+ facet_grid(relative_coverage~)
p1 <- ggplot(de, aes(x=vaccine_efficacy, y=prob_infection, color = type))+
theme_bw()+  geom_point() + geom_line()+
xlab("vaccine efficacy")+ ylab("Probability of infection")+ facet_grid.(relative_coverage~)
p1 <- ggplot(de, aes(x=vaccine_efficacy, y=prob_infection, color = type))+
theme_bw()+  geom_point() + geom_line()+
xlab("vaccine efficacy")+ ylab("Probability of infection")+ facet_grid(.relative_coverage~)
p1 <- ggplot(de, aes(x=vaccine_efficacy, y=prob_infection, color = type))+
theme_bw()+  geom_point() + geom_line()+
xlab("vaccine efficacy")+ ylab("Probability of infection")+ facet_grid(relative_coverage.~)
p1 <- ggplot(de, aes(x=vaccine_efficacy, y=prob_infection, color = type))+
theme_bw()+  geom_point() + geom_line()+
xlab("vaccine efficacy")+ ylab("Probability of infection")+ facet_grid(relative_coverage~.)
p1
dt$OR.vax <- dt$vac_prob_infection/dt$unvac_prob_infection
p <- ggplot(dt, aes(x= relative_coverage, y = OR.vax, group = vaccine_efficacy, color = vaccine_efficacy))+
geom_line()
p
p <- ggplot(dt, aes(x= vaccine_efficacy, y = OR.vax, group = relative_coverage, color = relative_coverage))+
geom_line()
p
head(dt)
dx <- rbind(dt1,dt2,dt3,dt4,dt5,dt6,dt7,dt8)
dt1 <- subset(dt, dt$relative_coverage == 0.1)
dt2 <- subset(dt, dt$relative_coverage == 0.2)
dt3 <- subset(dt, dt$relative_coverage == 0.3)
dt4 <- subset(dt, dt$relative_coverage == 0.4)
dt5 <- subset(dt, dt$relative_coverage == 0.5)
dt6 <- subset(dt, dt$relative_coverage == 0.6)
dt7 <- subset(dt, dt$relative_coverage == 0.7)
dt8 <- subset(dt, dt$relative_coverage == 0.8)
dx <- rbind(dt1,dt2,dt3,dt4,dt5,dt6,dt7,dt8)
p <- ggplot(dx, aes(x= vaccine_efficacy, y = OR.vax, group = relative_coverage, color = relative_coverage))+
geom_line()
p
p <- ggplot(dx, aes(x= vaccine_efficacy, y = OR.vax,  color = relative_coverage))+
geom_line()
p
dx$relative_coverage <- factor(dx$relative_coverage)
p <- ggplot(dx, aes(x= vaccine_efficacy, y = OR.vax,  color = relative_coverage))+
geom_line()
p
dx <- rbind(dt2,dt4,dt6,dt8)
dx$relative_coverage <- factor(dx$relative_coverage)
p <- ggplot(dx, aes(x= vaccine_efficacy, y = OR.vax,  color = relative_coverage))+
geom_line()
p
p <- ggplot(dx, aes(x= vaccine_efficacy, y = OR.vax,  color = relative_coverage))+
geom_point()
p
p <- ggplot(dx, aes(x= vaccine_efficacy, y = OR.vax,  color = relative_coverage))+
geom_point()+ stat_smooth(method = "loess")
p
p <- ggplot(dx, aes(x= vaccine_efficacy, y = OR.vax,  color = relative_coverage))+
geom_point()+ geom_smooth(method = "loess", )
p
?geom_smooth
p <- ggplot(dx, aes(x= vaccine_efficacy, y = OR.vax,  color = relative_coverage))+
geom_point()+ geom_smooth(method = "loess")
p
dt1 <- subset(dt, dt$relative_coverage == 0.1)
dt2 <- subset(dt, dt$relative_coverage == 0.2)
dt3 <- subset(dt, dt$relative_coverage == 0.3)
dt4 <- subset(dt, dt$relative_coverage == 0.4)
dt5 <- subset(dt, dt$relative_coverage == 0.5)
dt6 <- subset(dt, dt$relative_coverage == 0.6)
dt7 <- subset(dt, dt$relative_coverage == 0.7)
dt8 <- subset(dt, dt$relative_coverage == 0.8)
dt1 <- subset(dt, dt$relative_coverage == 0.1)
dt3 <- subset(dt, dt$relative_coverage == 0.3)
dt5 <- subset(dt, dt$relative_coverage == 0.5)
dt7 <- subset(dt, dt$relative_coverage == 0.7)
dt9 <- subset(dt, dt$relative_coverage == 0.9)
dx <- rbind(dt1,dt3,dt5,dt7, dt9)
dx$relative_coverage <- factor(dx$relative_coverage)
p <- ggplot(dx, aes(x= vaccine_efficacy, y = OR.vax,  color = relative_coverage))+
geom_point()+ geom_smooth(method = "loess")
p
dt$OR.unvax <- dt$unvac_prob_infection/dt$vac_prob_infection
dt1 <- subset(dt, dt$relative_coverage == 0.1)
dt2 <- subset(dt, dt$relative_coverage == 0.2)
dt3 <- subset(dt, dt$relative_coverage == 0.3)
dt4 <- subset(dt, dt$relative_coverage == 0.4)
dt5 <- subset(dt, dt$relative_coverage == 0.5)
dt6 <- subset(dt, dt$relative_coverage == 0.6)
dt7 <- subset(dt, dt$relative_coverage == 0.7)
dt8 <- subset(dt, dt$relative_coverage == 0.8)
dx <- rbind(dt2,dt4,dt6,dt8)
dx$relative_coverage <- factor(dx$relative_coverage)
p <- ggplot(dx, aes(x= vaccine_efficacy, y = OR.vax,  color = relative_coverage))+
geom_point()+ geom_smooth(method = "loess")
p1 <- ggplot(dx, aes(x= vaccine_efficacy, y = OR.unvax,  color = relative_coverage))+
geom_point()+ geom_smooth(method = "loess")
p2 <- ggplot(dx, aes(x= vaccine_efficacy, y = OR.unvax,  color = relative_coverage))+
geom_point()+ geom_smooth(method = "loess")
p2
p2 <- ggplot(dx, aes(x= vaccine_efficacy, y = unvac_prob_infection,  color = relative_coverage))+
geom_point()+ geom_smooth(method = "loess")
p2
dx2 <- rbind(dt3,dt4,dt5)
p2 <- ggplot(dx2, aes(x= vaccine_efficacy, y = unvac_prob_infection))+
geom_point()+ geom_smooth(method = "lm")
p2
p2 <- ggplot(dx2, aes(x= vaccine_efficacy, y = unvac_prob_infection))+
geom_point()+ geom_smooth(method = "lm") +
ylab("P(infection) for unvaccinated individuals")
p2
m1 <- lm(unvac_prob_infection ~ vaccine_efficacy, data=dx2)
summary(m1)
p2 <- ggplot(dx2, aes(x= vaccine_efficacy, y = unvac_prob_infection))+
geom_point()+ geom_smooth(method = "lm") +
ylab("P(infection) for unvaccinated individuals")+
xlab("Vaccine efficact")
p2
p2 <- ggplot(dx2, aes(x= vaccine_efficacy, y = unvac_prob_infection))+
geom_point()+ geom_smooth(method = "lm") +
ylab("P(infection) for unvaccinated individuals")+
xlab("Vaccine efficacy")
p2
ggsave("herd_immunity.eps", p2, height=8, width = 5)
ggsave("herd_immunity.pdf", p2, height=8, width = 5)
ggsave("herd_immunity.pdf", p2, height=5, width = 4)
ggsave("herd_immunity.pdf", p2, height=4, width = 3.5)
ggsave("herd_immunity.pdf", p2, height=4, width = 5)
p1
p1 <- ggplot(dx, aes(x= vaccine_efficacy, y = OR.vax,  color = relative_coverage))+
geom_point()+ geom_smooth(method = "loess")
p1
p2 <- ggplot(dx2, aes(x= vaccine_efficacy, y = unvac_prob_infection))+
geom_point()+ geom_smooth(method = "lm") +
ylab("P(infection) for unvaccinated individuals")+
xlab("Vaccine efficacy")
p2
p2 <- ggplot(dx2, aes(x= vaccine_efficacy, y = unvac_prob_infection))+
geom_point()+ geom_smooth(method = "lm") + ylim(0,1)+
ylab("P(infection) for unvaccinated individuals")+
xlab("Vaccine efficacy")
p2
ggsave("herd_immunity.pdf", p2, height=4, width = 5)
p1
p1 <- ggplot(dx, aes(x= vaccine_efficacy, y = OR.vax,  color = relative_coverage))+
geom_point()+ geom_smooth(method = "loess") +ylim(0.5,1)
p1
p1 <- ggplot(dx, aes(x= vaccine_efficacy, y = OR.vax,  color = relative_coverage))+
geom_point()+ geom_smooth(method = "loess") +ylim(0.5,1)+
ylab("Odds ratio of being infected for vaccinated")
p1
ggsave("odds_ratio_vaccinated_being_infected.pdf", p1, height=4, width = 5)
ggsave("odds_ratio_vaccinated_being_infected.pdf", p1, height=6, width = 8)
p1 <- ggplot(dx, aes(x= vaccine_efficacy, y = OR.vax,  color = relative_coverage))+
geom_point()+ geom_smooth(method = "loess") +ylim(0.5,1)+
ylab("Odds ratio of being infected for vaccinated")+xlab("Vaccine efficacy")
p1
ggsave("odds_ratio_vaccinated_being_infected.pdf", p1, height=6, width = 8)
dt1a <- read.csv("../data/Incidence_8Dec2017.csv", header=T)
dt1b <- read.csv("../data/Incidence_8Dec2017_v2.csv", header=T)
dt1 <- rbind(dt1a,dt1b)
dt1$infection_per_million <- dt1$total_infections/1000000
dt1 <- dt1[,c("relative_coverage", "vaccine_efficacy", "infection_per_million")]
dt2b <- read.csv("../data/Hospitalizations_8Dec2017_v2.csv", header=T)
dt2 <- rbind(dt2a, dt2b)
dt2a <- read.csv("../data/Hospitalizations_8Dec2017.csv", header=T)
dt2b <- read.csv("../data/Hospitalizations_8Dec2017_v2.csv", header=T)
dt2 <- rbind(dt2a, dt2b)
dt2$hospitalization_per_million <- dt2$total_hospitalizations/1000000
dt2 <- dt2[,c("relative_coverage", "vaccine_efficacy", "hospitalization_per_million")]
str(dt2)
dh <- read.csv("../data/historical_seasons_data.csv", header=T)
dh$infection_per_million <- dh$infections
str(dh)
dh<- na.omit(dh)
library(RColorBrewer)
k <- 11
my.cols <- rev(brewer.pal(k, "RdYlBu"))
p1 <- ggplot(dt1, aes(x=vaccine_efficacy, y=relative_coverage, fill = infection_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(0, 25,50, 100, 150,200,250))+
theme(legend.title=element_blank())+ggtitle("Influenza cases")
p1
ggsave("infections_2017_50iter.eps", p1, height = 5, width =8)
p2 <- ggplot(dt2, aes(x=vaccine_efficacy, y=relative_coverage, fill = hospitalization_per_million))+
geom_tile() + xlab("Vaccine efficacy") + ylab("Overall coverage")+
geom_vline(xintercept = 0.1, color ="black")+
scale_fill_gradientn(colours=my.cols, breaks=c(0, 1,2, 3,4))+
theme(legend.title=element_blank())+ggtitle("Case hospitalizations")
p2
ggsave("hospitalization_2017_50iter.eps", p2, height = 5, width =8)
library(ggplot2)
library(gridExtra)
library(grid)
library(plyr)
library(lattice)
library(reshape)
library(RColorBrewer)   # for brewer.pal(...)
library(cowplot)
library(Hmisc)
dta <- read.csv("../data/vaccinated_comparisons_8Dec2017.csv", header=T)
dtb <- read.csv("../data/vaccinated_comparisons_8Dec2017_v2.csv", header=T)
dt <- rbind(dta,dtb)
str(dt)
dt$vac_prob_infection <- dt$vaccinated_total_infections/dt$total_vaccinated
dt$unvac_prob_infection <- dt$unvaccinated_total_infections/dt$total_unvaccinated
dt$OR.vax <- dt$vac_prob_infection/dt$unvac_prob_infection
dt$OR.unvax <- dt$unvac_prob_infection/dt$vac_prob_infection
dt1 <- subset(dt, dt$relative_coverage == 0.1)
dt2 <- subset(dt, dt$relative_coverage == 0.2)
dt3 <- subset(dt, dt$relative_coverage == 0.3)
dt4 <- subset(dt, dt$relative_coverage == 0.4)
dt5 <- subset(dt, dt$relative_coverage == 0.5)
dt6 <- subset(dt, dt$relative_coverage == 0.6)
dt7 <- subset(dt, dt$relative_coverage == 0.7)
dt8 <- subset(dt, dt$relative_coverage == 0.8)
dx <- rbind(dt2,dt4,dt6,dt8)
dx$relative_coverage <- factor(dx$relative_coverage)
p1 <- ggplot(dx, aes(x= vaccine_efficacy, y = OR.vax,  color = relative_coverage))+
geom_point()+ geom_smooth(method = "loess") +ylim(0.5,1)+
ylab("Odds ratio of being infected for vaccinated")+xlab("Vaccine efficacy")
p1
ggsave("odds_ratio_vaccinated_being_infected_50iter.pdf", p1, height=6, width = 8)
dx2 <- rbind(dt3,dt4,dt5)
m1 <- lm(unvac_prob_infection ~ vaccine_efficacy, data=dx2)
summary(m1)
p2 <- ggplot(dx2, aes(x= vaccine_efficacy, y = unvac_prob_infection))+
geom_point()+ geom_smooth(method = "lm") + ylim(0,1)+
ylab("P(infection) for unvaccinated individuals")+
xlab("Vaccine efficacy")
p2
ggsave("herd_immunity.pdf", p2, height=4, width = 5)
ggsave("herd_immunity_50iter.pdf", p2, height=4, width = 5)
